"use strict";(self.webpackChunk_hadmean_archaea=self.webpackChunk_hadmean_archaea||[]).push([[477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/2022/12/09/how-to-generate-a-powerful-admin-app-from-your-database","metadata":{"permalink":"/blog/2022/12/09/how-to-generate-a-powerful-admin-app-from-your-database","source":"@site/blog/2022-12-09-how-to-generate-a-powerful-admin-app-from-your-database/index.md","title":"How to generate a powerful admin app from your database","description":"I believe we have all been there, We","date":"2022-12-09T00:00:00.000Z","formattedDate":"December 9, 2022","tags":[{"label":"how-to","permalink":"/blog/tags/how-to"}],"readingTime":0.94,"hasTruncateMarker":false,"authors":[{"name":"Ayobami Akingbade","title":"Creator of Hadmean","url":"https://github.com/thrownullexception","imageURL":"https://github.com/thrownullexception.png","key":"ayobami"}],"frontMatter":{"title":"How to generate a powerful admin app from your database","authors":["ayobami"],"tags":["how-to"]},"nextItem":{"title":"Why you should write more integration tests.","permalink":"/blog/2022/11/28/why-you-should-write-more-integrations-tests"}},"content":"I believe we have all been there, We \\n\\nFor the shortest tutorial on building things, the only step for you is to run\\n\\n```js\\nnpx hadmean\\n```\\n\\nThen go to [http://localhost:3000](http://localhost:3000) where you will be asked for your DB credentials and voila, You can start CRUDing your database. There is no Javascript, or SQL, or drag-and-drop tutorial needed to get started.\\n\\n[Hadmean](https://github.com/hadmean/hadmean) is not just a CRUD builder, it is fully an internal tool generator. It might be simple to install but it has tons of features and is entirely customizable.\\n\\n[Here](https://demo.hadmean.com) is a demo application built in under 59 seconds.\\n\\nOther features include:\\n- Authentication\\n- Users management\\n- Roles and permissions\\n- CRUD\\n- Relationships\\n- Forms validation\\n- Powerful Filters\\n- A powerful multi-page navigation system\\n- Automatic Introspection\\n- Views\\n- Intuitive dashboard builder\\n\\nYou can always refer to the [documentation](https://hadmean.com/docs/intro) to get the best out of Hadmean and join our [discord server](https://discord.gg/aV6DxwXhzN) to interact with the community.\\n\\nStart building your admin apps with Hadmean today! If you like this project and found this article helpful, please share and leave a star on [Github](https://github.com/hadmean/hadmean)."},{"id":"/2022/11/28/why-you-should-write-more-integrations-tests","metadata":{"permalink":"/blog/2022/11/28/why-you-should-write-more-integrations-tests","source":"@site/blog/2022-11-28-why-you-should-write-more-integrations-tests/index.md","title":"Why you should write more integration tests.","description":"Banner","date":"2022-11-28T00:00:00.000Z","formattedDate":"November 28, 2022","tags":[{"label":"testing","permalink":"/blog/tags/testing"}],"readingTime":4.335,"hasTruncateMarker":false,"authors":[{"name":"Ayobami Akingbade","title":"Creator of Hadmean","url":"https://github.com/thrownullexception","imageURL":"https://github.com/thrownullexception.png","key":"ayobami"}],"frontMatter":{"title":"Why you should write more integration tests.","authors":["ayobami"],"tags":["testing"]},"prevItem":{"title":"How to generate a powerful admin app from your database","permalink":"/blog/2022/12/09/how-to-generate-a-powerful-admin-app-from-your-database"},"nextItem":{"title":"Build a CRUD interface for your database in under 59 seconds","permalink":"/blog/2022/10/06/crud-under-59-seconds"}},"content":"![Banner](./banner.png)\\n\\nAfter writing software, engineers usually have to write tests for whatever reason they have but major write three types.\\n1. Unit tests.\\nThis are mostly Isolation tests i.e you take a part of the software and you isolate it and write a test for it. Isolation means that piece of software usually a function or component does not interact with other parts of the system. This isolation makes it very easy to write tests are you good control of the component making it very easy for you to have it in a desired state and test that state and also very easy to get the expected state and assert that. and another benefit is that it they are very easy to run as they are usually lightweights so usually run under seconds\\n2. End to End Tests.\\nEnd to End(E2E) tests are tests that are writting usually in the way a user will use the application. These tests are meant to be agnostic of the internal workings of the application. Infact they can be writing in another langauge different from the one the application is written in.\\nEnd to End needless to say gives the greatest confidence as they actually test the flow of the user in the way an actually user will use them.\\n3. Integration Tests. \\nIntegration tests are tests that test the interactions between two or more components of the software i.e you are test that yes these components are working seperately but do they communicate with each other correctly\\n\\nDevelopers usually get confused on what Integration tests are. Writing a test for a function though it calls other function is not an integration test even though it has some integration as this is still a unit test\\n\\nIntegration tests are tests that have a high level of abstraction over implementation detail\\n\\nFor example\\n1. A good integration test for the BE will be to setup the application to take in a route and the method and it should do something and that something is asserted by calling another route to check the effects. A bad way of doing this is to instead call the controller and mock the services and that the end check that the services are called correctly instead\\n2. For the FE a good integration test will be to take a page component or a large component and render with not passing any props and instead get the page to the desired state by mocking the API requests using a tool like MSW and interacting with the application clicking on button and asserting desired UI effects\\n\\nSo why should you write more Integrations test over the others. Integrations tests basically averages the good and bad part of unit tests and E2E tests \\n\\n1. You can easily achieve desired state\\nPrimarily E2E tests in my un-popular opinion is what you should strive for the most but the major pain point of E2E tests is the ability to acheive desired state. Let say you want to test the application for a user that is under the age of 35, male, Arabian and is christian. This conditions are very easy to achieve with Unit tests as you can easily pass the desired state as props and test the application as you see fit. \\nBut this is a pain point with E2E tests so really have to options.\\n1. You seed the application database with the desired state which is almost un-scalable as you will have to HardCode the userId in the tests or you use the E2E suites to get the application to the desired state before actually starting to test cases\\nBut with Integration tests you can easily set the state in the test suite though you will not be as nimble as unit-test but it will be way more easier than with a E2E test. \\n\\n\\n2. It is relatively lightweight.\\n    One big problem with e2e tests is that they are bulky, Like you will first need to setup the application itself i.e proviion database, run migrations, run seeds, start the application, start the frontend. Wait for both of them to be up, launch other services needed, fire up a browser then start the test cases. \\n    But wuth\\n\\n4. Less flaky.\\n    Because of the \\n\\n\\n3. It brings good enough confidences\\n    This is the major problem with most unit tests being that they are mostly implementation details, like they follow you components parameters around and they usually have to be updated the component changes during a refactor without any changes to the functionality\\n\\n\\nNothing in software are hard rules, this articles doesn\'t say scrape your e2e tests, or unit tests but rather try to see if you can test the case with an integration test, if the case is too complex i.e too many if-elses then you can abstract that to a function and unit-test that. And it is considered good practice to have e2e tests for critical flows in your application. like\\n- User can register\\n- User can login\\n- User can add product to cart\\n- User can checkout\\nBasically things that are primary to your business function should be test e2e and others should be test with integrations."},{"id":"/2022/10/06/crud-under-59-seconds","metadata":{"permalink":"/blog/2022/10/06/crud-under-59-seconds","source":"@site/blog/2022-10-06-crud-under-59-seconds/index.md","title":"Build a CRUD interface for your database in under 59 seconds","description":"For the shortest tutorial on building things, the only step for you is to run","date":"2022-10-06T00:00:00.000Z","formattedDate":"October 6, 2022","tags":[{"label":"introduction","permalink":"/blog/tags/introduction"}],"readingTime":0.9,"hasTruncateMarker":false,"authors":[{"name":"Ayobami Akingbade","title":"Creator of Hadmean","url":"https://github.com/thrownullexception","imageURL":"https://github.com/thrownullexception.png","key":"ayobami"}],"frontMatter":{"title":"Build a CRUD interface for your database in under 59 seconds","authors":["ayobami"],"tags":["introduction"]},"prevItem":{"title":"Why you should write more integration tests.","permalink":"/blog/2022/11/28/why-you-should-write-more-integrations-tests"},"nextItem":{"title":"Hadmean - Introducing the easiest, most efficient internal tool generator.","permalink":"/blog/2022/10/05/introduction"}},"content":"For the shortest tutorial on building things, the only step for you is to run\\n\\n```js\\nnpx hadmean\\n```\\n\\nThen go to [http://localhost:3000](http://localhost:3000) where you will be asked for your DB credentials and voila, You can start CRUDing your database. There is no Javascript, or SQL, or drag-and-drop tutorial needed to get started.\\n\\n[Hadmean](https://github.com/hadmean/hadmean) is not just a CRUD builder, it is fully an internal tool generator. It might be simple to install but it has tons of features and is entirely customizable.\\n\\n[Here](https://demo.hadmean.com) is a demo application built in under 59 seconds.\\n\\nOther features include:\\n- Authentication\\n- Users management\\n- Roles and permissions\\n- CRUD\\n- Relationships\\n- Forms validation\\n- Powerful Filters\\n- A powerful multi-page navigation system\\n- Automatic Introspection\\n- Views\\n- Intuitive dashboard builder\\n\\nYou can always refer to the [documentation](https://hadmean.com/docs/intro) to get the best out of Hadmean and join our [discord server](https://discord.gg/aV6DxwXhzN) to interact with the community.\\n\\nStart building your admin apps with Hadmean today! If you like this project and found this article helpful, please share and leave a star on [Github](https://github.com/hadmean/hadmean)."},{"id":"/2022/10/05/introduction","metadata":{"permalink":"/blog/2022/10/05/introduction","source":"@site/blog/2022-10-05-introduction/index.md","title":"Hadmean - Introducing the easiest, most efficient internal tool generator.","description":"Banner","date":"2022-10-05T00:00:00.000Z","formattedDate":"October 5, 2022","tags":[{"label":"introduction","permalink":"/blog/tags/introduction"}],"readingTime":4.285,"hasTruncateMarker":true,"authors":[{"name":"Ayobami Akingbade","title":"Creator of Hadmean","url":"https://github.com/thrownullexception","imageURL":"https://github.com/thrownullexception.png","key":"ayobami"}],"frontMatter":{"title":"Hadmean - Introducing the easiest, most efficient internal tool generator.","authors":["ayobami"],"tags":["introduction"]},"prevItem":{"title":"Build a CRUD interface for your database in under 59 seconds","permalink":"/blog/2022/10/06/crud-under-59-seconds"}},"content":"![Banner](./banner.png)\\n\\n## Introduction\\nIt is often said that a critical ingredient to success lies in one\'s ability to use tools. There are numerous tools out there to help make your work easier, such as internal tools. But what are they for? Why do you need them? And can you use them effectively to improve your business\'s performance and operate more efficiently?\\n\x3c!--truncate--\x3e\\n\\nThe answer is Yes! And that\'s one of the reasons for building Hadmean, a modern no-code, internal tool generator. Developers tend not to enjoy building internal tools as they are boring and too repetitive. With Hadmean, building admin interfaces and internal apps becomes extremely easy and more importantly fun. However, before delving into all the exciting features and offerings of Hadmean, let us briefly understand internal tools.\\n\\n## What are internal\xa0tools?\\nInternal tools, also known as admin interfaces, internal software, admin panels, internal apps, admin dashboards, or employee tools, are software created to perform administrative tasks in an organization. These are generally purpose-built to fit an organization\'s internal operations and processes. They range from data visualization dashboards and CRUD interfaces to your data, lead management systems, and customer support tools.\\n\\nInternal tools are incredibly vital, and developers invest significant time in developing internal tools, admin panels, and systems for back-office operations to automate and speed up essential business functions. It includes several efforts, ranging from database maintenance to creating various front-end and back-end codes. But what if you could utilize a modern tool to build such applications that help to ease the burden of your work? Sounds good, right? Let\'s look at how you can also create internal tools that enable business agility.\\n## What is\xa0Hadmean?\\n[Hadmean](https://github.com/hadmean/hadmean) is an open-source, no-code software that generates admin dashboards, internal apps, and admin panels based on your existing database information. It is fully featured and extremely customizable.\\n\\n## Why Hadmean?\\nMost internal tool generators make you build from the ground up i.e you get a blank canvas then you are asked to drag and drop components, and wire them together to satisfy your business requirement. This I believe has many problems.\\n- They require technical know-how.\\n- They require some learning curve.\\n- They require time to build and maintain.\\n- You duplicate a lot of business logic already in your database.\\n\\nHadmean approaches internal tool generation by introspecting your database and building a multi-page application according to all the info it can find, like your field types, relationships, constraints, etc. No JavaScript or SQL is needed to get a fully working application.\\n\\n## Features\\nBelow are some of the top-rated features of Hadmean that make it the best platform for internal tool generation.\\n\\n**Easy to install:** Hadmean has one of the easiest installation processes for such a robust tool. It requires just one command `npx hadmean` to get it up and running.\\n\\n**Easy to use:** There is no technical knowledge required to use Hadmean as it is a visual tool hence there is almost zero learning curve.\\n\\n**Customizable:** Hadmean is fully customizable, you can turn on/off every feature you see in the UI within the UI.\\n\\n**Free and Opensource:** Hadmean is freely available and fully open-sourced. Since it is open-source, the source code is available to the public so you can always modify it for your use case however you see fit.\\n\\n**Language/framework agnostic**: Hadmean is interoperable among various systems. It follows a universal principle that is independent of language specifics.\\n\\nTechnical features include:\\n- Authentication\\n- Users management\\n- Roles and permissions\\n- CRUD\\n- Relationships\\n- Forms validation\\n- Powerful Filters\\n- A powerful multi-page navigation system\\n- Automatic Introspection\\n- Views\\n- Intuitive dashboard builder\\n\\n## Easy steps to build your first internal\xa0tool\\nTo get started, you will need to have [Node.js](https://nodejs.org/en/download/). That is the only requirement.\\n\\nThen run the following command to get it started\\n\\n```bash\\nnpx hadmean\\n```\\nYou should now be able to see the application running at [http://locahost:3000](http://locahost:3000) where you will be asked to provide your DB credentials and voila your admin app is fully set up.\\n\\n[Here](https://demo.hadmean.com) is a link to a demo application built with Hadmean in under 1 minute.\\n\\nTo get a broad overview of how it works, watch a [quick demo](https://github.com/hadmean/hadmean#quick-demo).\\n\\nYou can always refer to the [documentation](https://hadmean.com) to get the best out of Hadmean and join our [discord server](https://discord.gg/aV6DxwXhzN) to interact with the community.\\n\\n## Wrapping up\\nAs a final note, this is just the beginning! We are optimistic about what the future holds, with several other exciting features in the pipeline. Hadmean is here to stay, and we\'ll keep executing and serving our users the latest updates.\\n\\nTry Hadmean if you haven\'t already and share it with your friends in the tech space, developers, QA engineers, product managers, CTOs, designers, etc.\\n\\nWant to get more involved or contribute to the project, see the [open issues](https://github.com/hadmean/hadmean/issues) for a list of proposed features. Any contributions you make will be highly beneficial and appreciated. Get started by reading the [contribution guidelines](https://github.com/hadmean/hadmean/blob/master/docs/CONTRIBUTING.md).\\n\\nStart building your admin apps with Hadmean today! If you like this project and found this article helpful, please share and leave a star on GitHub."}]}')}}]);